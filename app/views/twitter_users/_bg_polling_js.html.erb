<script>
  var jid = '<%= @jid %>';
  var signedIn = <%= user_signed_in? %>;
  var invalidToken = <%= user_signed_in? && !current_user.authorized? %>;
  var softLimited = <%= !user_signed_in? && SearchLimitation.soft_limited?(twitter_user) %>;
  var crawler = <%= from_crawler? %>;
  var removePage = <%= remove_related_page? %>;
  var viaDM = <%= via_dm? %>;
  var profileNotFound = <%= twitter_user.profile_not_found? %>;
  var tooShortCreateInterval = <%= twitter_user.too_short_create_interval? %>;
  var isEgotterFollower = <%= user_signed_in? && EgotterFollower.exists?(uid: current_user.uid) %>;
  var periodicReportStopped = <%= user_signed_in? && !PeriodicReport.messages_allotted?(current_user) && !StopPeriodicReportRequest.exists?(user_id: current_user.id) %>;
  var isPremium = <%= user_signed_in? && current_user.has_valid_subscription? %>;
  var eventCategory = '<%= "#{controller_name}/#{action_name}" %>';

  var urls = {
    twitter_users_changes: '<%= raw twitter_users_changes_path(uid: twitter_user.uid) %>',
    twitter_user: '<%= raw twitter_user_path(uid: twitter_user.uid, via: current_via('update_box')) %>'
  };

  var twitterUser = {
    userId: '<%= current_user&.id %>',
    uid: '<%= twitter_user.uid %>',
    screenName: "<%= twitter_user.screen_name %>",
    createdAt: <%= twitter_user.created_at.to_i %>,
    createdAt_s: '<%= twitter_user.created_at %>'
  };

  $(function () {
    if (profileNotFound) {
      ToastMessage.info('<%= t('twitter_users.in_background.profile_not_found_html', url: timeline_path(twitter_user, via: current_via('profile_not_found'))) %>');
      return;
    }

    if (signedIn) {
      if (invalidToken) {
        var message = '<%= t('twitter_users.in_background.invalid_token_html', user: twitter_user.screen_name, url: sign_in_and_timeline_path(twitter_user, via: 'invalid_token')) %>';
        ToastMessage.info(message);
        return;
      } else if (!isPremium && !isEgotterFollower) {
        var message = '<%= t('twitter_users.in_background.is_not_egotter_follower_html', user: current_user&.screen_name, url: sign_in_and_timeline_path(twitter_user, via: 'not_egotter_follower', follow: true)) %>';
        ToastMessage.info(message, {id: 'not_egotter_follower'});
        return;
      } else if (!isPremium && periodicReportStopped) {
        var message = '<%= t('twitter_users.in_background.periodic_report_stopped_html') %>';
        ToastMessage.info(message, {id: 'periodic_report_stopped', ttl: 300});
        return;
      }

    } else {
      var message;
      if (removePage) {
        message = '<%= t('twitter_users.in_background.accurate_counting_html', url: sign_in_and_timeline_path(twitter_user, via: 'accurate_counting')) %>';
      } else if (softLimited) {
        message = '<%= t('twitter_users.in_background.soft_limited_html', user: twitter_user.screen_name, url: sign_in_and_timeline_path(twitter_user, via: 'soft_limited')) %>';
      } else if (viaDM) {
        message = '<%= t('twitter_users.in_background.via_dm_html', url: sign_in_and_timeline_path(twitter_user, via: 'via_dm')) %>';
      } else if (!crawler) {
        message = '<%= t('twitter_users.in_background.sign_in_html', url: sign_in_and_timeline_path(twitter_user, via: 'sign_in')) %>';
      } else {
        // Maybe crawler
        message = '<%= t('twitter_users.in_background.sign_in_html', url: sign_in_and_timeline_path(twitter_user, via: 'sign_in')) %>';
      }

      if (message) {
        ToastMessage.info(message);
      }

      return;
    }

    if (jid) {
      logger.log('jid', jid);

      var options = {
        url: urls.twitter_user,
        twitterUser: twitterUser
      };
      new Polling(options).start(function done() {
        new FetchChangesText(urls.twitter_users_changes).fetch(function done(message) {
          if (message) {
            message += '<%= t('twitter_users.show.reload_page_html', url: timeline_path(twitter_user, via: current_via('reload_page'))) %>';
          } else {
            message = '<%= t('twitter_users.show.update_is_coming', user: twitter_user.screen_name, url: timeline_path(twitter_user, via: current_via('update_is_coming'))) %>';
          }
          ToastMessage.info(message);
        });
      }, function failed(reason) {
        if (reason === 'stopped') {
          var message = '<%= t('twitter_users.in_background.polling_stopped_html', url: timeline_path(twitter_user, via: current_via('polling_stopped')), time: time_ago_in_words_ja(twitter_user.created_at)) %>';
          ToastMessage.info(message);
        } else {
          var message = '<%= t('twitter_users.in_background.failed_html', url: timeline_path(twitter_user, via: current_via('polling_failed'))) %>';
          ToastMessage.info(message);
        }
      });
      ToastMessage.info('<%= t('twitter_users.in_background.updating_html', user: twitter_user.screen_name) %>');
    } else {
      logger.log("Job is not started.");
      var message = '<%= t('twitter_users.in_background.displayed_data_is_html', url: timeline_path(twitter_user, via: current_via('job_not_started')), time: time_ago_in_words_ja(twitter_user.created_at)) %>';
      ToastMessage.info(message, {id: 'job_not_started-<%= twitter_user.created_at.to_i %>', ttl: 60});
    }
  });
</script>
