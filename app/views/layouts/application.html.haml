!!!
%html{lang: 'ja'}
  %head
    %meta{content: 'text/html; charset=UTF-8', 'http-equiv' => 'Content-Type'}
    %meta{charset: 'utf-8'}
    %meta{content: 'IE=edge', 'http-equiv' => 'X-UA-Compatible'}
    %meta{content: 'width=device-width, initial-scale=1', name: 'viewport'}
    %link{rel: "icon", sizes: "192x192", href: image_path('/favicon-192.png')}
    %link{href: image_path('/apple-touch-icon.png'), rel: 'apple-touch-icon'}
    %link{href: image_path('/apple-touch-icon-120x120.png'), rel: 'apple-touch-icon', sizes: '120x120'}
    %link{href: image_path('/apple-touch-icon-152x152.png'), rel: 'apple-touch-icon', sizes: '152x152'}
    -# Set meta-title and meta-description
    = render partial: 'layouts/meta_tags'
    %meta{content: 'summary_large_image', name: 'twitter:card'}
    %meta{content: '@ego_tter', name: 'twitter:site'}
    %link{:crossorigin => "anonymous", :href => "https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css", :integrity => "sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh", :rel => "stylesheet"}/
    -# For Autocomplete
    %link{href: '//code.jquery.com/ui/1.12.0/themes/cupertino/jquery-ui.min.css', rel: 'stylesheet'}
    = stylesheet_link_tag 'application', media: 'all', crossorigin: 'anonymous'
    = javascript_include_tag 'application', crossorigin: 'anonymous'
    = javascript_pack_tag 'application'
    = javascript_pack_tag 'search_modal'
    = javascript_pack_tag 'snack_message'
    = javascript_pack_tag 'toast_message'
    = javascript_pack_tag 'welcome'
    %script{src: '//code.jquery.com/ui/1.12.0/jquery-ui.js'}
    %script{src: '//cdnjs.cloudflare.com/ajax/libs/jquery.lazyload/1.9.1/jquery.lazyload.min.js'}
    %script{:crossorigin => "anonymous", :integrity => "sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo", :src => "https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"}
    %script{:crossorigin => "anonymous", :integrity => "sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6", :src => "https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"}
    %link{crossorigin: "anonymous", href: "//use.fontawesome.com/releases/v5.6.3/css/all.css", integrity: "sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/", rel: "stylesheet"}
    %link{:crossorigin => "anonymous", :href => "https://cdn.jsdelivr.net/npm/node-snackbar@0.1.16/dist/snackbar.min.css", :integrity => "sha256-qfsdVqVeKPVy58Hx9qCIn8Nsdh2TU1yicE7B5EHi+Ss=", :rel => "stylesheet"}/
    %script{:crossorigin => "anonymous", :integrity => "sha256-NOqsQWSGulWF4j0yfFlFwk9rmFpAoRV5nodGqIHyjUo=", :src => "https://cdn.jsdelivr.net/npm/node-snackbar@0.1.16/dist/snackbar.min.js"}
    %script{:crossorigin => "anonymous", :integrity => "sha256-Z7vZOdzU6nCmyqd53Q0EfBYAZtWilBbFj5cWoYrRs48=", :src => "https://cdnjs.cloudflare.com/ajax/libs/jquery-sidebar/3.3.2/jquery.sidebar.min.js"}
    %script{src: '//cdnjs.cloudflare.com/ajax/libs/mustache.js/3.0.1/mustache.min.js', type: 'text/javascript', integrity: 'sha256-srhz/t0GOrmVGZryG24MVDyFDYZpvUH2+dnJ8FbpGi0=', crossorigin: 'anonymous'}
    = csrf_meta_tags

    - if Rails.env.development?
      :css
        .adsbygoogle {
          border: 1px dashed black;
        }

    = yield(:canonical_url) if content_for?(:canonical_url)

    = render partial: 'shared/google'
    = render partial: 'shared/twitter'
    = render partial: 'shared/airbrake'
    = render partial: 'shared/templates'

    - if user_signed_in?
      = render partial: 'shared/onesignal'

  %body
    = javascript_include_tag '/adsense.js'
    = render partial: 'shared/toast'

    = render partial: 'layouts/header' if show_header? && !under_maintenance?
    = render partial: 'layouts/sidemenu'
    = render partial: 'layouts/alert'

    - if wrap_in_container?
      .container._debug_header
        .row
          - if show_sidebar?
            .d-none.d-sm-none.d-md-block.col-md-3
              .sticky-top
                = render partial: 'layouts/sidenav', locals: {twitter_user: @twitter_user}
            .col-12.col-sm-12.col-md-9
              = render partial: 'layouts/breadcrumbs'
              = yield
          - else
            .col-12
              = render partial: 'layouts/breadcrumbs'
              = yield
    - else
      = yield

    = render partial: 'shared/highcharts'
    = render partial: 'shared/stripe'

    %script{src: '//cdnjs.cloudflare.com/ajax/libs/jquery.sticky/1.0.4/jquery.sticky.min.js', type: 'text/javascript'}
    %script{src: '//cdnjs.cloudflare.com/ajax/libs/d3/4.2.7/d3.min.js', type: 'text/javascript'}
    %script{src: '//cdnjs.cloudflare.com/ajax/libs/d3-cloud/1.2.3/d3.layout.cloud.min.js', type: 'text/javascript'}

    = render partial: 'layouts/footer' unless under_maintenance?

  - unless under_maintenance?
    = render partial: 'modal/search_modal'

  - if user_signed_in?
    -# This modal will be initialized in Twitter.enableFollowButton('selector') after follow buttons are rendered.
    = modal_dialog id: 'create-follow-modal', title: t('twitter.create_follow_modal.title'), button: {positive: t('twitter.create_follow_modal.yes'), negative: t('twitter.create_follow_modal.no')}, data: {url: follows_path(via: current_via('create_follow_modal'))} do
      %p= t('twitter.create_follow_modal.message_html')
      %p= t('twitter.create_follow_modal.history_link_html', url: settings_path(via: current_via('create_follow_modal'), anchor: 'follow-count'))
      .dont-confirm
        %input#create-follow-dont-confirm{type: 'checkbox'}
        %label{for: 'create-follow-dont-confirm'}= t('twitter.create_follow_modal.dont_confirm')

    -# This modal will be initialized in Twitter.enableUnfollowButton('selector') after unfollow buttons are rendered.
    = modal_dialog id: 'create-unfollow-modal', title: t('twitter.create_unfollow_modal.title'), button: {positive: t('twitter.create_unfollow_modal.yes'), negative: t('twitter.create_unfollow_modal.no'), category: 'danger'}, data: {url: unfollows_path(via: current_via('create_unfollow_modal'))} do
      %p= t('twitter.create_unfollow_modal.message_html')
      %p= t('twitter.create_unfollow_modal.history_link_html', url: settings_path(via: current_via('create_unfollow_modal'), anchor: 'unfollow-count'))
      .dont-confirm
        %input#create-unfollow-dont-confirm{type: 'checkbox'}
        %label{for: 'create-unfollow-dont-confirm'}= t('twitter.create_unfollow_modal.dont_confirm')

    #follow-limitation-warning-modal.modal.fade{role: 'dialog', tabindex: '-1'}
      .modal-dialog{role: 'document'}
        .modal-content
          .modal-body
            %p= t('twitter.warning_follow_modal.message_html')
          .modal-footer
            = link_to t('twitter.warning_follow_modal.see_pricing'), pricing_path(via: current_via('follow_limit_warning')), class: 'btn btn-outline-primary', target: '_blank'
            - if user_signed_in?
              - if current_user.has_valid_subscription?
                %button.btn.btn-outline-primary.disabled= t('twitter.warning_follow_modal.purchased')
              - else
                = link_to t('twitter.warning_follow_modal.purchase'), '#', class: 'btn btn-primary btn-checkout'
            - else
              = link_to t('twitter.warning_follow_modal.login'), sign_in_path(via: current_via('follow_limit_warning')), class: 'btn btn-primary'

    #unfollow-limitation-warning-modal.modal.fade{role: 'dialog', tabindex: '-1'}
      .modal-dialog{role: 'document'}
        .modal-content
          .modal-body
            %p= t('twitter.warning_unfollow_modal.message_html')
          .modal-footer
            = link_to t('twitter.warning_unfollow_modal.see_pricing'), pricing_path(via: current_via('unfollow_limit_warning')), class: 'btn btn-outline-primary', target: '_blank'
            - if user_signed_in?
              - if current_user.has_valid_subscription?
                %button.btn.btn-outline-primary.disabled= t('twitter.warning_unfollow_modal.purchased')
              - else
                = link_to t('twitter.warning_unfollow_modal.purchase'), '#', class: 'btn btn-primary btn-checkout'
            - else
              = link_to t('twitter.warning_unfollow_modal.login'), sign_in_path(via: current_via('unfollow_limit_warning')), class: 'btn btn-primary'

  - if user_signed_in? && !under_maintenance?
    -# This modal is always embedded because it is used in settings page.
    = modal_dialog id: 'share-modal', title: t('.share_modal.title_html'), button: {positive: t('.share_modal.ok'), negative: t('.share_modal.cancel')}, data: {url: shares_path(via: current_via('share_egotter_modal')), success_message: t('.share_modal.success'), error_message: t('.share_modal.error')} do
      %img.d-block.mx-auto{src: image_path('/egotter_thanks_840x483.png'), width: request.from_pc? ? '400' : '300'}
      %p.mt-3= t('.share_modal.note_for_count_html', count: SearchCountLimitation.current_sharing_bonus(current_user))
      %small
        %textarea{rows: '3', style: 'width: 100%; -webkit-appearance: none;'}= t('.follow_modal.tweet_text', kaomoji: Kaomoji.happy)
        = t('.share_modal.note_html')
        https://egotter.com #egotter

    - if params[:follow_dialog] == '1'
      = modal_dialog id: 'follow-modal', title: t('.follow_modal.title_html'), button: {positive: t('.follow_modal.ok'), negative: t('.follow_modal.cancel')}, data: {url: follows_path(via: current_via('follow_egotter_modal')), follow_url: follow_intent_url('ego_tter')} do
        %img.d-block.mx-auto{src: image_path('/egotter_usagi_840x450.png'), width: request.from_pc? ? '400' : '300'}
        .mt-3= t('.follow_modal.note_html')

    = modal_dialog id: 'revive-modal', title: t('.revive_modal.title_html'), button: {positive: t('.revive_modal.ok')}, data: {url: t('.revive_modal.url', uid: current_user.uid)} do
      %img.d-block.mx-auto{src: image_path('/egotter_revive_840x450.png'), height: request.from_pc? ? '200' : '140'}
      .mt-3= t('.revive_modal.body_html', url: t('.revive_modal.url', uid: current_user.uid))

:javascript
  $(function () {
    var followingEgotter = #{user_signed_in? && current_user.following_egotter?};
    Welcome.showFollowDialogAndShareDialog(followingEgotter);
  });
