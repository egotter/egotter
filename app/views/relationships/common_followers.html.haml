- title @title
- set_meta_tags description: "#{@title} - #{@searched_tw_users[0].description}"

= render(partial: 'profiles/overview',
  locals: {user: @searched_tw_users[0], unique_id: @searched_tw_users[0].uid})

:javascript
  $(function () {
    enableSlickOnPageTop('#{@searched_tw_users[0].uid}');
  });

.common-result
  %h2.h4= @title

  .return-to-results-top= link_to(t('searches.common.return', user: @searched_tw_users[0].mention_name), search_path(screen_name: @searched_tw_users[0].screen_name))

  = render(partial: 'common/adsense')

  - if @user_items.any?
    .page-entries-info-top
      = render(partial: 'searches/page_entries_info',
        locals: {params: {controller: controller_name, action: action_name, src_screen_name: @searched_tw_users[0].screen_name, dst_screen_name: @searched_tw_users[1].screen_name}, items: @user_items})

    - rendered_uids = []
    #common_followers
      = render(partial: 'search_results/user_item', collection: @user_items, cached: true, locals: {uids: rendered_uids})

    - users = rendered_uids.uniq.map { |uid| @user_items.find { |item| item[:target].uid.to_i == uid.to_i }[:target] }
    = render(partial: 'profiles/modal', collection: users, as: :user, cached: true, locals: {unique_id: nil, searched_tw_user: @searched_tw_users[0], via: :profile_modal})

    :javascript
      $(function () {
        enableSlickOnUserList('#common_followers');
        $("img.lazy").lazyload();
      });

    .page-entries-info-bottom
      = render(partial: 'searches/page_entries_info',
        locals: {params: {controller: controller_name, action: action_name, src_screen_name: @searched_tw_users[0].screen_name, dst_screen_name: @searched_tw_users[1].screen_name}, items: @user_items})
  - else
    - if user_signed_in?
      - if @searched_tw_users.any? { |tu| tu.too_many_friends?(login_user: current_user, context: :search) }
        %div= raw t('after_sign_in.empty_and_sign_in_and_too_many_friends', user: @searched_tw_users.map(&:mention_name).join(t('searches.common.or')), kaomoji: Kaomoji.unhappy)
      - else
        %div= raw t('after_sign_in.empty_and_other_reason', kaomoji: Kaomoji.happy)
    - else
      - if @searched_tw_users.any? { |tu| tu.many_friends? }
        %div= raw t('before_sign_in.empty_and_anonymous_and_many_friends', user: @searched_tw_users.map(&:mention_name).join(t('searches.common.or')), sign_in_link: link_to(t('dictionary.sign_in'), welcome_path), kaomoji: Kaomoji.happy)
      - else
        %div= raw t('before_sign_in.empty_and_other_reason', sign_in_link: link_to(t('dictionary.sign_in'), welcome_path), kaomoji: Kaomoji.unhappy)
    = render(partial: 'searches/tweet_box', locals: {tweet_text: empty_result_text(@title)})

  = render(partial: 'common/adsense_bottom')

  .return-to-results-bottom= link_to(t('searches.common.return', user: @searched_tw_users[0].mention_name), search_path(screen_name: @searched_tw_users[0].screen_name))
