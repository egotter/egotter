<% via = current_via('summary_on_timeline') %>
<% items = [
  ['one_sided_friends', t('.one_sided_friends')],
  ['one_sided_followers', t('.one_sided_followers')],
  ['mutual_friends', t('.mutual_friends')],
  ['inactive_friends', t('.inactive_friends')],
  ['inactive_followers', t('.inactive_followers')],
  ['unfriends', t('.unfriends')],
  ['unfollowers', t('.unfollowers')],
  ['mutual_unfriends', t('.mutual_unfriends')],
  ['blockers', t('.blockers')],
  ['muters', t('.muters')],
] %>

<div class="summary-on-timeline">
  <div class="list-group">
    <% items.each do |name, title| %>
      <%= link_to "#feed-#{name}", class: 'list-group-item', onclick: "itemOnSummaryClicked(this, '#{name}')" do %>
        <div class="d-flex justify-content-between align-items-center">
          <div><%= title %></div>
          <div>
            <span class="analyzing <%= name %>"><%= t('.analyzing') %></span>
            <span class="zero text-muted <%= name %>" style="display: none;"><%= t('.zero') %></span>
            <span class="result <%= name %>" style="display: none;"><span class="count">0</span><%= t('.unit') %></span>
            <span class="error text-muted" style="display: none;"><%= t('.error') %></span>
          </div>
        </div>
        <div class="small text-muted collapse summary-descriptions"><%= summary_description(name) %></div>
      <% end %>
    <% end %>
  </div>

  <div class="text-center text-muted small mt-1">
    <%= t('.notice') %>
    <button class="btn btn-outline-primary btn-sm p-1" data-toggle="collapse" aria-expanded="false" data-target=".summary-descriptions">
      <i class="far fa-question-circle"></i>
      <%= t('.word_description') %>
    </button>
  </div>
  <div class="summary-descriptions text-muted small collapse mt-3">
    <div class="card">
      <div class="card-body">
        <%= t('.detailed_description_html') %>
      </div>
    </div>
  </div>
</div>

<script>
  function itemOnSummaryClicked(elem, name) {
    var count = $(elem).find('.count').text();
    ahoy.track('Summary clicked', {name: name, count: count});
  }

  $(function () {
    var url = '<%= raw api_v1_summaries_path(uid: twitter_user.uid, via: via) %>';
    var names = <%= raw items.map(&:first).to_json %>;
    var parent = $('.summary-on-timeline');

    function updateView(res) {
      for (var i = 0; i < names.length; i++) {
        var name = names[i];
        var count = res[name];

        parent.find('.analyzing.' + name).hide();
        if (count <= 0) {
          parent.find('.zero.' + name).show();
        } else {
          parent.find('.result.' + name).find('.count').text(count).end().show();
        }
      }
    }

    function updateErrorView(xhr, textStatus, errorThrown) {
      parent.find('.analyzing').hide();
      parent.find('.error').show();
      showErrorMessage(xhr, textStatus, errorThrown);
    }

    function createFetcher() {
      var retry = 0;

      function fetch() {
        $.getJSON(url).done(function (res) {
          logger.log('summary', 'loaded');
          updateView(res);
          trackPageEvents('TimelinePage events', 'Summary loaded', {response: res});
        }).fail(function (xhr, textStatus, errorThrown) {
          logger.warn('summary', 'fetch failed', xhr.status);
          if (xhr.status === 404) {
            if ((retry++) < 3) {
              logger.log('summary', 'retry', retry);
              setTimeout(fetch, 3000);
            } else {
              logger.warn('summary', 'Retry exhausted');
              updateErrorView(xhr, textStatus, errorThrown);
            }
          } else {
            updateErrorView(xhr, textStatus, errorThrown);
          }
        });
      }

      return {fetch: fetch};
    }

    createFetcher().fetch();
  });
</script>
